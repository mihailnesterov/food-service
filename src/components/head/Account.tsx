import React, {FC, useState, useEffect} from 'react';
import { useHistory } from "react-router-dom";
import { useTypedSelector } from '../../hooks/useTypedSelector';
import {useActions} from '../../hooks/useActions';
import {RouteNames} from '../../routes';
import MiniCart from '../cart/MiniCart';

const Account: FC = () => {

    // store
    const {users} = useTypedSelector(state => state.user);
    // action-creators
    const {fetchUsers} = useActions();
    useEffect(() => {
        fetchUsers();
    }, []);

    const {CATALOG, FAVORITS, CART, PERSONAL} = RouteNames;

    const history = useHistory();
    
    const [pathname, setPathname] = useState<string | null | undefined>(history.location.pathname);

    const handleGoToPath = (PATH: string): void => {
        setPathname(PATH);
        history.push(PATH);
    }    

	return(
        <div className="uk-flex uk-flex-middle uk-flex-right">
            <button 
                onClick={() => handleGoToPath(CATALOG)} 
                className={pathname && pathname === CATALOG ? "active" : ""}>
                <span>
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12.0001 5.14648C11.2445 5.14648 10.506 5.37052 9.87778 5.79027C9.24958 6.21002 8.75996 6.80662 8.47084 7.50463C8.18171 8.20265 8.10606 8.97072 8.25346 9.71173C8.40085 10.4527 8.76467 11.1334 9.29891 11.6676C9.83314 12.2019 10.5138 12.5657 11.2548 12.7131C11.9958 12.8605 12.7639 12.7848 13.4619 12.4957C14.1599 12.2066 14.7565 11.717 15.1763 11.0888C15.596 10.4606 15.8201 9.72201 15.8201 8.96648C15.8201 7.95336 15.4176 6.98173 14.7012 6.26534C13.9848 5.54895 13.0132 5.14648 12.0001 5.14648ZM12.0001 11.4532C11.5082 11.4532 11.0275 11.3073 10.6185 11.0341C10.2096 10.7608 9.89088 10.3725 9.70268 9.91809C9.51447 9.46371 9.46522 8.96373 9.56117 8.48136C9.65712 7.99899 9.89395 7.55591 10.2417 7.20815C10.5895 6.86038 11.0326 6.62355 11.5149 6.5276C11.9973 6.43165 12.4973 6.48089 12.9517 6.6691C13.406 6.85731 13.7944 7.17604 14.0676 7.58497C14.3409 7.9939 14.4867 8.47467 14.4867 8.96648C14.485 9.62483 14.2222 10.2556 13.756 10.7205C13.2899 11.1854 12.6584 11.4465 12.0001 11.4465V11.4532Z" fill="#43B727"/>
                        <path d="M11.9999 1.33301C9.92341 1.33474 7.93193 2.15813 6.46048 3.62334C4.98903 5.08854 4.15717 7.0765 4.14661 9.15301C4.14661 12.2663 5.89327 14.873 7.17327 16.773L7.40661 17.1197C8.68013 18.9654 10.0463 20.7455 11.4999 22.453L12.0066 23.0463L12.5133 22.453C13.9667 20.7453 15.3329 18.9653 16.6066 17.1197L16.8399 16.7663C18.1133 14.8663 19.8599 12.2663 19.8599 9.15301C19.8494 7.07535 19.0166 5.08638 17.5437 3.62099C16.0708 2.15559 14.0776 1.33298 11.9999 1.33301ZM15.7266 15.9997L15.4866 16.353C14.3399 18.073 12.8199 19.9997 11.9999 20.953C11.2133 19.9997 9.65994 18.073 8.51327 16.353L8.27994 15.9997C7.09994 14.2397 5.47994 11.833 5.47994 9.12634C5.47994 8.27012 5.64858 7.42229 5.97625 6.63125C6.30391 5.8402 6.78417 5.12144 7.3896 4.51601C7.99504 3.91057 8.7138 3.43031 9.50484 3.10265C10.2959 2.77499 11.1437 2.60634 11.9999 2.60634C12.8562 2.60634 13.704 2.77499 14.495 3.10265C15.2861 3.43031 16.0048 3.91057 16.6103 4.51601C17.2157 5.12144 17.696 5.8402 18.0236 6.63125C18.3513 7.42229 18.5199 8.27012 18.5199 9.12634C18.5199 11.8597 16.9066 14.2663 15.7266 15.9997Z" fill="#43B727"/>
                    </svg>
                </span>
                <span>Магазины рядом</span>
            </button>
            <button 
                onClick={() => handleGoToPath(PERSONAL)} 
                className={pathname && pathname === PERSONAL ? "active" : ""}>
                <span>
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M21.7441 19.8737C20.3446 17.4634 18.1035 15.6555 15.4516 14.7979C16.722 14.0419 17.7091 12.8899 18.2614 11.5186C18.8136 10.1473 18.9004 8.63262 18.5084 7.20723C18.1164 5.78183 17.2673 4.52454 16.0915 3.62846C14.9158 2.73238 13.4783 2.24707 12 2.24707C10.5217 2.24707 9.08428 2.73238 7.9085 3.62846C6.73273 4.52454 5.88364 5.78183 5.49165 7.20723C5.09966 8.63262 5.18644 10.1473 5.73867 11.5186C6.29091 12.8899 7.27805 14.0419 8.54848 14.7979C5.89663 15.6555 3.65548 17.4633 2.25598 19.8735C2.20665 19.9587 2.1746 20.0529 2.16166 20.1505C2.14871 20.2482 2.15513 20.3474 2.18053 20.4426C2.20594 20.5377 2.24984 20.627 2.30973 20.7052C2.36962 20.7834 2.44433 20.849 2.52959 20.8983C2.61484 20.9476 2.70898 20.9797 2.80662 20.9926C2.90427 21.0056 3.0035 20.9992 3.09867 20.9738C3.19383 20.9484 3.28306 20.9045 3.36126 20.8446C3.43945 20.7847 3.50509 20.71 3.55442 20.6247C4.41062 19.1425 5.64183 17.9118 7.12433 17.0561C8.60682 16.2004 10.2884 15.75 12.0001 15.75C13.7118 15.75 15.3934 16.2005 16.8759 17.0562C18.3584 17.9119 19.5896 19.1427 20.4457 20.6249C20.4951 20.7101 20.5607 20.7848 20.6389 20.8447C20.7171 20.9046 20.8063 20.9485 20.9015 20.9739C20.9966 20.9993 21.0959 21.0057 21.1935 20.9928C21.2911 20.9798 21.3853 20.9478 21.4705 20.8985C21.5558 20.8491 21.6305 20.7835 21.6903 20.7053C21.7502 20.6271 21.7941 20.5379 21.8195 20.4427C21.8449 20.3476 21.8513 20.2483 21.8384 20.1507C21.8254 20.0531 21.7934 19.9589 21.7441 19.8737ZM6.74998 9C6.74998 7.96165 7.05788 6.94661 7.63476 6.08325C8.21164 5.2199 9.03158 4.54699 9.99089 4.14963C10.9502 3.75227 12.0058 3.6483 13.0242 3.85088C14.0426 4.05345 14.9781 4.55346 15.7123 5.28769C16.4465 6.02191 16.9465 6.95737 17.1491 7.97577C17.3517 8.99417 17.2477 10.0498 16.8503 11.0091C16.453 11.9684 15.7801 12.7883 14.9167 13.3652C14.0534 13.9421 13.0383 14.25 12 14.25C10.6081 14.2484 9.27364 13.6948 8.28942 12.7106C7.3052 11.7263 6.75157 10.3919 6.74998 9Z" fill="#43B727"/>
                    </svg>
                </span>
                <span>Войти</span>
            </button>
            <button 
                onClick={() => handleGoToPath(FAVORITS)} 
                className={pathname && pathname === FAVORITS ? "active" : ""}
            >
                <span>
                    {/*<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.963 3.62095C14.7464 3.21288 15.6167 2.99987 16.5 3C17.2223 3 17.9375 3.14226 18.6048 3.41866C19.2721 3.69506 19.8784 4.10019 20.3891 4.61091C20.8998 5.12163 21.3049 5.72795 21.5813 6.39524C21.8577 7.06253 22 7.77773 22 8.5C22 14.22 15.5 18.938 12 21.35C8.5 18.938 2 14.22 2 8.5C2 7.04131 2.57946 5.64236 3.61091 4.61091C4.64236 3.57946 6.04131 3 7.5 3C8.38332 2.99987 9.25363 3.21288 10.037 3.62095C10.8204 4.02902 11.4938 4.6201 12 5.344C12.5062 4.6201 13.1796 4.02902 13.963 3.62095Z" fill="#43B727"/>
                    </svg>*/}
                    <svg width="20" height="19" viewBox="0 0 20 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M14.5 2C16.706 2 18.5 3.794 18.5 6C18.5 10.67 12.957 14.94 10 17.023C7.043 14.94 1.5 10.67 1.5 6C1.5 3.794 3.294 2 5.5 2C6.14231 2.00145 6.77487 2.15716 7.34445 2.45405C7.91403 2.75093 8.40395 3.18029 8.773 3.706L10 5.453L11.227 3.707C11.5956 3.18075 12.0854 2.75092 12.6551 2.45382C13.2247 2.15672 13.8575 2.00106 14.5 2ZM14.5 0.5C13.6167 0.499871 12.7464 0.712883 11.963 1.12095C11.1796 1.52902 10.5062 2.1201 10 2.844C9.49382 2.1201 8.82044 1.52902 8.03703 1.12095C7.25363 0.712883 6.38332 0.499871 5.5 0.5C4.04131 0.5 2.64236 1.07946 1.61091 2.11091C0.579463 3.14236 0 4.54131 0 6C0 11.72 6.5 16.438 10 18.85C13.5 16.438 20 11.72 20 6C20 5.27773 19.8577 4.56253 19.5813 3.89524C19.3049 3.22795 18.8998 2.62163 18.3891 2.11091C17.8784 1.60019 17.2721 1.19506 16.6048 0.918663C15.9375 0.642262 15.2223 0.5 14.5 0.5Z" fill="#43B727"/>
                    </svg>
                </span>
                <span>Избранное</span>
            </button>

            <MiniCart 
                handleGoToCart={() => handleGoToPath(CART)}
                classlist={pathname && pathname === CART ? "active" : ""}
            />

        </div>
    );
};

export default Account;